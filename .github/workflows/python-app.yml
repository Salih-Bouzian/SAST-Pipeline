# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python Application CI/CD

on:
  pull_request:
    branches:
      - main


jobs:
  security-checks:
    name: Security Checks
    runs-on: ubuntu-latest

    steps:
    # Checkout repository code
    - name: Checkout code
      uses: actions/checkout@v3

    # Setup Python environment
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.X'
        
    - name: Install dependencies
      run: |
          # Update pip to latest version
          python -m pip install --upgrade pip
          # Install security tools: bandit (SAST), safety (dependency checker), detect-secrets
          pip install bandit safety

    # Run Static Application Security Testing (SAST)
    - name: Run SAST
      run: |
          bandit -r . -v --severity-level low || (
            echo "SAST scan foudn security issues"
            exit 1
          )
      continue-on-error: true


    # Check dependencies for vulnerabilities
    - name: Dependency check
      run: |
        pip install safety
        safety check

    # Check for secrets in the code
    - name: Check for secrets
      run: |
          if detect-secrets scan . | grep -v '{}' > secrets.txt; then
            echo "Secrets were detected in the codebase:"
            cat secrets.txt
            exit 1
          fi

    # Fail the pull request if there are any warnings or errors
    - name: Enforce security policies
      if: ${{ failure() }}
      run: |
        echo "Checks failed. Please resolve all warnings and errors before merging."
        exit 1
